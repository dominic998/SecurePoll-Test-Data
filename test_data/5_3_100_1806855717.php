<?php

/**
 * $candidates = [1, 2, 3, 4, 5];
 * $totalVotes = 100;
 * $voteDistribution = [
 *     [21, 20, 20, 20, 20],
 *     [2, 1, 1, 1, 1],
 *     [1, 1, 1, 1, 0],
 *     [1, 1, 1, 0, 0],
 *     [1, 1, 0, 0, 0],
 * ];
 *
 * Results from openstv for number of seats = 3:
 *
 * Counting votes for ElectionTitle using Meek STV.
 * 5 candidates running for 3 seats.
 * 
 *  R|1                 |2                 |3                 |4                 
 *   |------------------+------------------+------------------+------------------
 *   |5                 |Exhausted         |Surplus           |Threshold         
 * ==============================================================================
 *  1|         20.000000|         20.000000|         20.000000|         20.000000
 *   |         20.000000|          0.000000|          0.000000|         25.000001
 *   |---------------------------------------------------------------------------
 *   | Count of first choices.
 * ==============================================================================
 *  2|         21.000000|                  |         21.000000|         20.000000
 *   |         20.000000|         18.000000|          0.999998|         20.500001
 *   |---------------------------------------------------------------------------
 *   | Count after eliminating 2 and transferring votes. All losing candidates
 *   | are eliminated. Candidates 1, 2, 3, 4, and 5 were tied when choosing
 *   | candidates to eliminate. Candidate 2 was chosen by breaking the tie
 *   | randomly. Candidates 1 and 3 have reached the threshold and are elected.
 * ==============================================================================
 *  3|         20.500011|                  |         20.500011|         20.047618
 *   |         20.000000|         18.952360|          0.476200|         20.261911
 *   |---------------------------------------------------------------------------
 *   | Count after transferring surplus votes. Keep factors of candidates who
 *   | have exceeded the threshold: 1, 0.976191 and 3, 0.976191.
 * ==============================================================================
 *  4|         20.261913|                  |         20.261913|         20.070294
 *   |         20.000000|         19.405880|          0.226764|         20.148531
 *   |---------------------------------------------------------------------------
 *   | Count after transferring surplus votes. Keep factors of candidates who
 *   | have exceeded the threshold: 1, 0.964853 and 3, 0.964853.
 * ==============================================================================
 *  5|         20.148534|                  |         20.148534|         20.081092
 *   |         20.000000|         19.621840|          0.107986|         20.094541
 *   |---------------------------------------------------------------------------
 *   | Count after transferring surplus votes. Keep factors of candidates who
 *   | have exceeded the threshold: 1, 0.959454 and 3, 0.959454.
 * ==============================================================================
 *  6|         20.094543|                  |         20.094543|         20.086234
 *   |         20.000000|         19.724680|          0.068827|         20.068831
 *   |---------------------------------------------------------------------------
 *   | Count after transferring surplus votes. Keep factors of candidates who
 *   | have exceeded the threshold: 1, 0.956883 and 3, 0.956883. Candidate 4 has
 *   | reached the threshold and is elected.
 * 
 * Winners are 1, 3, and 4.
 */

return array (
  0 => 
  array (
    0 => '1',
    1 => '4',
    2 => '3',
    3 => '2',
  ),
  1 => 
  array (
    0 => '4',
    1 => '5',
    2 => '1',
    3 => '3',
    4 => '2',
  ),
  2 => 
  array (
    0 => '2',
    1 => '3',
    2 => '4',
    3 => '1',
  ),
  3 => 
  array (
    0 => '2',
    1 => '1',
  ),
  4 => 
  array (
    0 => '5',
    1 => '1',
    2 => '2',
  ),
  5 => 
  array (
    0 => '5',
    1 => '2',
  ),
  6 => 
  array (
    0 => '5',
  ),
  7 => 
  array (
    0 => '4',
  ),
  8 => 
  array (
    0 => '4',
  ),
  9 => 
  array (
    0 => '2',
  ),
  10 => 
  array (
    0 => '4',
  ),
  11 => 
  array (
    0 => '4',
  ),
  12 => 
  array (
    0 => '3',
  ),
  13 => 
  array (
    0 => '5',
  ),
  14 => 
  array (
    0 => '5',
  ),
  15 => 
  array (
    0 => '5',
  ),
  16 => 
  array (
    0 => '4',
  ),
  17 => 
  array (
    0 => '2',
  ),
  18 => 
  array (
    0 => '2',
  ),
  19 => 
  array (
    0 => '3',
  ),
  20 => 
  array (
    0 => '3',
  ),
  21 => 
  array (
    0 => '1',
  ),
  22 => 
  array (
    0 => '4',
  ),
  23 => 
  array (
    0 => '3',
  ),
  24 => 
  array (
    0 => '4',
  ),
  25 => 
  array (
    0 => '5',
  ),
  26 => 
  array (
    0 => '2',
  ),
  27 => 
  array (
    0 => '2',
  ),
  28 => 
  array (
    0 => '2',
  ),
  29 => 
  array (
    0 => '2',
  ),
  30 => 
  array (
    0 => '1',
  ),
  31 => 
  array (
    0 => '5',
  ),
  32 => 
  array (
    0 => '3',
  ),
  33 => 
  array (
    0 => '2',
  ),
  34 => 
  array (
    0 => '3',
  ),
  35 => 
  array (
    0 => '2',
  ),
  36 => 
  array (
    0 => '5',
  ),
  37 => 
  array (
    0 => '3',
  ),
  38 => 
  array (
    0 => '1',
  ),
  39 => 
  array (
    0 => '1',
  ),
  40 => 
  array (
    0 => '4',
  ),
  41 => 
  array (
    0 => '4',
  ),
  42 => 
  array (
    0 => '4',
  ),
  43 => 
  array (
    0 => '1',
  ),
  44 => 
  array (
    0 => '3',
  ),
  45 => 
  array (
    0 => '3',
  ),
  46 => 
  array (
    0 => '4',
  ),
  47 => 
  array (
    0 => '4',
  ),
  48 => 
  array (
    0 => '4',
  ),
  49 => 
  array (
    0 => '2',
  ),
  50 => 
  array (
    0 => '1',
  ),
  51 => 
  array (
    0 => '2',
  ),
  52 => 
  array (
    0 => '1',
  ),
  53 => 
  array (
    0 => '5',
  ),
  54 => 
  array (
    0 => '1',
  ),
  55 => 
  array (
    0 => '3',
  ),
  56 => 
  array (
    0 => '2',
  ),
  57 => 
  array (
    0 => '4',
  ),
  58 => 
  array (
    0 => '4',
  ),
  59 => 
  array (
    0 => '5',
  ),
  60 => 
  array (
    0 => '4',
  ),
  61 => 
  array (
    0 => '5',
  ),
  62 => 
  array (
    0 => '3',
  ),
  63 => 
  array (
    0 => '5',
  ),
  64 => 
  array (
    0 => '3',
  ),
  65 => 
  array (
    0 => '5',
  ),
  66 => 
  array (
    0 => '3',
  ),
  67 => 
  array (
    0 => '3',
  ),
  68 => 
  array (
    0 => '2',
  ),
  69 => 
  array (
    0 => '2',
  ),
  70 => 
  array (
    0 => '3',
  ),
  71 => 
  array (
    0 => '3',
  ),
  72 => 
  array (
    0 => '3',
  ),
  73 => 
  array (
    0 => '4',
  ),
  74 => 
  array (
    0 => '4',
  ),
  75 => 
  array (
    0 => '5',
  ),
  76 => 
  array (
    0 => '2',
  ),
  77 => 
  array (
    0 => '1',
  ),
  78 => 
  array (
    0 => '1',
  ),
  79 => 
  array (
    0 => '1',
  ),
  80 => 
  array (
    0 => '2',
  ),
  81 => 
  array (
    0 => '3',
  ),
  82 => 
  array (
    0 => '4',
  ),
  83 => 
  array (
    0 => '3',
  ),
  84 => 
  array (
    0 => '1',
  ),
  85 => 
  array (
    0 => '1',
  ),
  86 => 
  array (
    0 => '3',
  ),
  87 => 
  array (
    0 => '1',
  ),
  88 => 
  array (
    0 => '2',
  ),
  89 => 
  array (
    0 => '5',
  ),
  90 => 
  array (
    0 => '5',
  ),
  91 => 
  array (
    0 => '1',
  ),
  92 => 
  array (
    0 => '5',
  ),
  93 => 
  array (
    0 => '5',
  ),
  94 => 
  array (
    0 => '2',
  ),
  95 => 
  array (
    0 => '1',
  ),
  96 => 
  array (
    0 => '1',
  ),
  97 => 
  array (
    0 => '1',
  ),
  98 => 
  array (
    0 => '1',
  ),
  99 => 
  array (
    0 => '5',
  ),
);
